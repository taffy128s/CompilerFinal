    .file    "unknown.cpp"
    ! ABI version
    .abi_2
    ! This asm file is generated by Taffy's compiler
    .flag    verbatim
    ! This vector size directive is required for checking inconsistency on interrupt handler
    .vec_size	16
    ! ------------------------------------
    ! ISA family        : V3M
    ! Pipeline model    : N8
    ! Code model        : LARGE
    ! Endian setting    : little-endian
    ! Use SP floating-point instruction    : No
    ! Use DP floating-point instruction    : No
    ! ABI version    : ABI2
    ! ------------------------------------
    ! Use conditional move           : Yes
    ! Use performance extension      : No
    ! Use performance extension 2    : No
    ! Use string extension           : No
    ! ------------------------------------
    ! V3PUSH instructions      : No
    ! 16-bit instructions      : No
    ! Reduced registers set    : Yes
    ! ------------------------------------
    ! Optimization level    : -O0
    ! ------------------------------------
    ! Cache block size    : 16
    ! ------------------------------------
    .text
    .align    1
    .global    _Z5setupv
    .type    _Z5setupv, @function
_Z5setupv:
    push.s    { $lp }
    addi    $sp, $sp, -400
    movi    $r0, 13
    swi    $r0, [$sp + (392)]
    movi    $r0, 1
    swi    $r0, [$sp + (388)]
    lwi    $r1, [$sp + (388)]
    lwi    $r0, [$sp + (392)]
    bal pinMode
    addi    $sp, $sp, 400
    pop.s    { $lp }
    ret
    .size    _Z5setupv, .-_Z5setupv
    .align    1
    .global    _Z4loopv
    .type    _Z4loopv, @function
_Z4loopv:
    push.s    { $lp }
    addi    $sp, $sp, -400
    movi    $r0, 1
    swi    $r0, [$sp + (392)]
    lwi    $r0, [$sp + (392)]
    swi    $r0, [$sp + (0)]
.W0:
    lwi    $r0, [$sp + (0)]
    swi    $r0, [$sp + (392)]
    movi    $r0, 10
    swi    $r0, [$sp + (388)]
    lwi    $r1, [$sp + (388)]
    lwi    $r0, [$sp + (392)]
    slts    $r0, $r0, $r1
    swi    $r0, [$sp + (392)]
    lwi    $r0, [$sp + (392)]
    beqz    $r0, .W1
    movi    $r0, 0
    swi    $r0, [$sp + (392)]
    lwi    $r0, [$sp + (392)]
    swi    $r0, [$sp + (4)]
    lwi    $r0, [$sp + (0)]
    swi    $r0, [$sp + (392)]
    movi    $r0, 1000
    swi    $r0, [$sp + (388)]
    lwi    $r1, [$sp + (388)]
    lwi    $r0, [$sp + (392)]
    mul    $r0, $r0, $r1
    swi    $r0, [$sp + (392)]
    lwi    $r0, [$sp + (392)]
    swi    $r0, [$sp + (4)]
    movi    $r0, 13
    swi    $r0, [$sp + (392)]
    movi    $r0, 1
    swi    $r0, [$sp + (388)]
    lwi    $r1, [$sp + (388)]
    lwi    $r0, [$sp + (392)]
    bal digitalWrite
    lwi    $r0, [$sp + (4)]
    swi    $r0, [$sp + (392)]
    lwi    $r0, [$sp + (392)]
    bal delay
    movi    $r0, 13
    swi    $r0, [$sp + (392)]
    movi    $r0, 0
    swi    $r0, [$sp + (388)]
    lwi    $r1, [$sp + (388)]
    lwi    $r0, [$sp + (392)]
    bal digitalWrite
    lwi    $r0, [$sp + (4)]
    swi    $r0, [$sp + (392)]
    lwi    $r0, [$sp + (392)]
    bal delay
    lwi    $r0, [$sp + (0)]
    addi    $r0, $r0, 1
    swi    $r0, [$sp + (0)]
    j    .W0
.W1:
    addi    $sp, $sp, 400
    pop.s    { $lp }
    ret
    .size    _Z4loopv, .-_Z4loopv
    .ident    "REDUCED GCC: (2017-05-21_taffy_compiler) 1.0.0"
    ! ------------------------------------
